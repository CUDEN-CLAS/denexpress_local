---
  - name: Install additional OS packages
    yum: name={{ item }} state=present
    with_items:
      - curl
      - php-posix
      - php-xml
    become: yes

  - name: Install Composer
    become: yes
    shell: >
      curl -sS https://getcomposer.org/installer | php
      creates=/usr/local/bin/composer

  - name: Move Composer into globally-accessible location
    become: yes
    shell: >
      mv composer.phar /usr/local/bin/composer
      creates=/usr/local/bin/composer

  - name: Install Drush 7 globally with Composer
    become: yes
    command: "/usr/local/bin/composer global require drush/drush:7.*"

  - name: Create directories for additional verions of Drush
    become: yes
    file: path={{ item }} state=directory
    with_items:
      - "/usr/local/share/drush/drush6"
      - "/usr/local/share/drush/drush7"
      #- "/usr/local/share/drush/drush8"

  - name: Install Drush 6 locally with Composer
    become: yes
    command: "/usr/local/bin/composer require drush/drush:6.*"
    args:
      chdir: "/usr/local/share/drush/drush6"

  - name: Install Drush 7 locally with Composer
    become: yes
    command: "/usr/local/bin/composer require drush/drush:7.*"
    args:
      chdir: "/usr/local/share/drush/drush7"

  # Cannot do this until we bump the PHP version to >= 5.4.5
  # See also:
  #  Role: Drush - "Create directories for additional versions of Drush"
  #  Role: Server base - templates/bashrc.j2
  #
  # - name: Install Drush 8 locally with Composer
  #   become: yes
  #   command: "/usr/local/bin/composer require drush/drush:8.*"
  #   args:
  #     chdir: "/usr/local/share/drush/drush8"

  - name: Create ~/.drush
    file: >
      path=/home/dplagnt/.drush
      state=directory
      owner=dplagnt

  - name: Clone DSLM from drupal.org
    git:
        repo: "http://git.drupal.org/project/dslm.git"
        dest: "{{ item }}"
        version: "7.x-2.x"
    with_items:
        - "/usr/local/share/drush/drush6/commands/dslm"
        - "/usr/local/share/drush/drush7/commands/dslm"
        #- "/usr/local/share/drush/drush8/commands/dslm"

  - name: Add DSLM_BASE variable to .profile
    lineinfile:
      dest=/home/dplagnt/.profile
      line="export DSLM_BASE=/data/code/dslm_base"
      regexp="^export DSLM_BASE=/data/code/dslm_base"
      state=present
      insertafter=EOF
      create=True

  - name: Add PACKAGES_BASE variable to .profile
    lineinfile:
      dest=/home/dplagnt/.profile
      line="export PACKAGES_BASE=/data/code/packages_base"
      regexp="^export PACKAGES_BASE=/data/code/packages_base"
      state=present
      insertafter=EOF
      create=True

  - name: Install Drush-patchfile with Composer
    shell: >
      /usr/local/bin/composer require davereid/drush-patchfile:dev-master
      chdir=/home/dplagnt/.drush
      creates=/home/dplagnt/.drush/composer.json

  - name: Copy drushrc.php to VM to dplagnt
    template:
      src: drushrc.php.j2
      dest: /home/dplagnt/.drush/drushrc.php
      owner: dplagnt
      force: yes

  - file: path=/home/dplagnt/.drush owner=dplagnt group=lapurd state=directory recurse=yes

  # Need to use the bash shell to run these commands.
  - name: Run drush
    become: yes
    become_user: dplagnt
    shell: "drush"
    args:
      chdir: "/home/dplagnt"
      executable: "/bin/bash"

  - name: Install registry_rebuild
    become: yes
    become_user: dplagnt
    shell: "drush dl registry_rebuild -y"
    register: registry_rebuild
    failed_when: "'Project registry_rebuild contains 0 modules' not in registry_rebuild.stdout"
    args:
      chdir: "/home/dplagnt"
      executable: "/bin/bash"
