---
- name: Install necessary OS packages
  yum:
      name: "{{ item }}"
      state: present
      update_cache: yes
  with_items:
      - libselinux-python
  when: key_set == 'user'

- name: Creates destination directory
  file:
      dest: "/root/.ssh/"
      state: directory
      mode: 0700
  when: key_set == 'user'

- name: Pushes user's rsa key to root's vagrant box (it's ok if this TASK fails)
  copy:
      src: "~/.ssh/id_rsa.pub"
      dest: "/root/.ssh/authorized_keys"
      owner: root
      mode: 0600
  register: rsa
  ignore_errors: yes
  when: key_set == 'user'

- name: Pushes user's dsa key to root's vagrant box (it's NOT ok if both TASKs fail)
  copy:
      src: "~/.ssh/id_dsa.pub"
      dest: "/root/.ssh/authorized_keys"
      owner: root
      mode: 0600
  when: rsa|failed and key_set == 'user'

- name: Copy ssh key to target server
  become: yes
  become_user: dplagnt
  copy:
      src: "/tmp/id_rsa_deploy.pub"
      dest: "/tmp/"
      mode: 0600
  when: key_set == 'dplagnt_dest'

- name: Add key to authorized_keys
  become: yes
  become_user: dplagnt
  authorized_key:
      user: dplagnt
      key: "{{ lookup('file', '/tmp/id_rsa_deploy.pub') }}"
  when: key_set == 'dplagnt_dest'

- name: Remove old key file
  become: yes
  become_user: dplagnt
  file:
      path: ".ssh/id_rsa_deploy"
      state: absent
  when: key_set == 'dplagnt_src'

- name: Remove old key pub file
  become: yes
  become_user: dplagnt
  file:
      path: ".ssh/id_rsa_deploy.pub"
      state: absent
  when: key_set == 'dplagnt_src'

- name: Create ssh key for dplagnt to deploy with
  become: yes
  become_user: dplagnt
  user:
      name: dplagnt
      generate_ssh_key: yes
      ssh_key_file: .ssh/id_rsa_deploy
  when: key_set == 'dplagnt_src'

- name: Fetch key
  become: yes
  become_user: dplagnt
  fetch:
      src: "/home/dplagnt/.ssh/id_rsa_deploy.pub"
      dest: "/tmp/id_rsa_deploy.pub"
      fail_on_missing: yes
      flat: yes
  when: key_set == 'dplagnt_src'
